# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from common.api import dnschat_pb2 as common_dot_api_dot_dnschat__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class ChatStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPublicKey = channel.unary_unary(
                '/dnschat.Chat/GetPublicKey',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.RSAPubKey.FromString,
                )
        self.GetDHParams = channel.unary_unary(
                '/dnschat.Chat/GetDHParams',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.SignedMessage.FromString,
                )
        self.NewSession = channel.unary_unary(
                '/dnschat.Chat/NewSession',
                request_serializer=common_dot_api_dot_dnschat__pb2.DHPubKey.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.SignedMessage.FromString,
                )
        self.Register = channel.unary_unary(
                '/dnschat.Chat/Register',
                request_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                )
        self.Login = channel.unary_unary(
                '/dnschat.Chat/Login',
                request_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                )
        self.ListUsers = channel.unary_unary(
                '/dnschat.Chat/ListUsers',
                request_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                )
        self.NewChatSession = channel.unary_unary(
                '/dnschat.Chat/NewChatSession',
                request_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                )
        self.SendChatMessage = channel.unary_unary(
                '/dnschat.Chat/SendChatMessage',
                request_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                )
        self.PullMessages = channel.unary_unary(
                '/dnschat.Chat/PullMessages',
                request_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                )
        self.ExpireSession = channel.unary_unary(
                '/dnschat.Chat/ExpireSession',
                request_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                )
        self.StoreEncryptedData = channel.unary_unary(
                '/dnschat.Chat/StoreEncryptedData',
                request_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                )
        self.CreateGroup = channel.unary_unary(
                '/dnschat.Chat/CreateGroup',
                request_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                )
        self.AddUserToGroup = channel.unary_unary(
                '/dnschat.Chat/AddUserToGroup',
                request_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                )
        self.RemoveUserFromGroup = channel.unary_unary(
                '/dnschat.Chat/RemoveUserFromGroup',
                request_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
                response_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                )


class ChatServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetPublicKey(self, request, context):
        """Empty -> RSAPubKey
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDHParams(self, request, context):
        """Empty -> DHParams
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewSession(self, request, context):
        """DHPubKey -> DHPubKey
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """RegisterRequest -> RegisterResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """LoginRequest -> LoginResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUsers(self, request, context):
        """Empty -> List<String>
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewChatSession(self, request, context):
        """NewChatSessionRequest -> NewChatSessionResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendChatMessage(self, request, context):
        """SendChatMessageRequest -> SendChatMessageResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PullMessages(self, request, context):
        """Empty -> PullMessageResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExpireSession(self, request, context):
        """Empty -> Key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StoreEncryptedData(self, request, context):
        """StoreEncryptedDataRequest -> StoreEncryptedDataResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateGroup(self, request, context):
        """CreateGroupRequest -> CreateGroupResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddUserToGroup(self, request, context):
        """AddUserToGroupRequest -> AddUserToGroupResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveUserFromGroup(self, request, context):
        """RemoveUserFromGroupRequest -> RemoveUserFromGroupResponse
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPublicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPublicKey,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.RSAPubKey.SerializeToString,
            ),
            'GetDHParams': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDHParams,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.SignedMessage.SerializeToString,
            ),
            'NewSession': grpc.unary_unary_rpc_method_handler(
                    servicer.NewSession,
                    request_deserializer=common_dot_api_dot_dnschat__pb2.DHPubKey.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.SignedMessage.SerializeToString,
            ),
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            ),
            'ListUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUsers,
                    request_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            ),
            'NewChatSession': grpc.unary_unary_rpc_method_handler(
                    servicer.NewChatSession,
                    request_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            ),
            'SendChatMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendChatMessage,
                    request_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            ),
            'PullMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.PullMessages,
                    request_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            ),
            'ExpireSession': grpc.unary_unary_rpc_method_handler(
                    servicer.ExpireSession,
                    request_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            ),
            'StoreEncryptedData': grpc.unary_unary_rpc_method_handler(
                    servicer.StoreEncryptedData,
                    request_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            ),
            'CreateGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateGroup,
                    request_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            ),
            'AddUserToGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUserToGroup,
                    request_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            ),
            'RemoveUserFromGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveUserFromGroup,
                    request_deserializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
                    response_serializer=common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dnschat.Chat', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Chat(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetPublicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/GetPublicKey',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            common_dot_api_dot_dnschat__pb2.RSAPubKey.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDHParams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/GetDHParams',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            common_dot_api_dot_dnschat__pb2.SignedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/NewSession',
            common_dot_api_dot_dnschat__pb2.DHPubKey.SerializeToString,
            common_dot_api_dot_dnschat__pb2.SignedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/Register',
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/Login',
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/ListUsers',
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewChatSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/NewChatSession',
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendChatMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/SendChatMessage',
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PullMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/PullMessages',
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ExpireSession(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/ExpireSession',
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StoreEncryptedData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/StoreEncryptedData',
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/CreateGroup',
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddUserToGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/AddUserToGroup',
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveUserFromGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dnschat.Chat/RemoveUserFromGroup',
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.SerializeToString,
            common_dot_api_dot_dnschat__pb2.EncryptedMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
